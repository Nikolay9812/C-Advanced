using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;

namespace Demo
{
    class Program
    {
        static void Main(string[] args)
        {
            int n = int.Parse(Console.ReadLine());

            char[,] matrix = new char[n, n];

            int beeRow = 0;
            int beeCol = 0;

            for (int row = 0; row < n; row++)
            {
                char[] currRow = Console.ReadLine().ToCharArray();

                for (int col = 0; col < n; col++)
                {
                    matrix[row, col] = currRow[col];

                    if (currRow[col] == 'B')
                    {
                        beeRow = row;
                        beeCol = col;
                    }
                }
            }

            string command;
            int flowersCount = 0;
            bool isLost = false;

            while ((command = Console.ReadLine()) != "End")
            {
                if (command == "up")
                {
                    matrix[beeRow, beeCol] = '.';

                    if (beeRow - 1 >= 0)
                    {
                        beeRow--;

                        if (matrix[beeRow, beeCol] == 'f')
                        {
                            flowersCount++;
                        }
                        if (matrix[beeRow, beeCol] == 'O')
                        {
                            matrix[beeRow, beeCol] = '.';

                            if (beeRow - 1 >= 0)
                            {
                                beeRow--;
                                if (matrix[beeRow, beeCol] == 'f')
                                {
                                    flowersCount++;
                                }
                            }
                            else
                            {
                                isLost = true;
                                break;
                            }
                        }
                        matrix[beeRow, beeCol] = 'B';
                    }
                    else
                    {
                        isLost = true;
                        break;
                    }

                }
                else if (command == "down")
                {
                    matrix[beeRow, beeCol] = '.';

                    if (beeRow + 1 < matrix.GetLength(0))
                    {
                        beeRow++;

                        if (matrix[beeRow, beeCol] == 'f')
                        {
                            flowersCount++;
                        }
                        if (matrix[beeRow, beeCol] == 'O')
                        {
                            matrix[beeRow, beeCol] = '.';

                            if (beeRow + 1 < matrix.GetLength(0))
                            {
                                beeRow++;

                                if (matrix[beeRow, beeCol] == 'f')
                                {
                                    flowersCount++;
                                }
                            }
                            else
                            {
                                isLost = true;
                                break;
                            }
                        }
                        matrix[beeRow, beeCol] = 'B';
                    }
                    else
                    {
                        isLost = true;
                        break;
                    }
                }
                else if (command == "left")
                {
                    matrix[beeRow, beeCol] = '.';

                    if (beeCol - 1 >= 0)
                    {
                        beeCol--;
                        if (matrix[beeRow, beeCol] == 'f')
                        {
                            flowersCount++;
                        }
                        if (matrix[beeRow, beeCol] == 'O')
                        {
                            matrix[beeRow, beeCol] = '.';

                            if (beeCol - 1 >= 0)
                            {
                                beeCol--;
                                if (matrix[beeRow, beeCol] == 'f')
                                {
                                    flowersCount++;
                                }
                            }
                            else
                            {
                                isLost = true;
                                break;
                            }
                        }
                        matrix[beeRow, beeCol] = 'B';
                    }
                    else
                    {
                        isLost = true;
                        break;
                    }
                }
                else if (command == "right")
                {
                    matrix[beeRow, beeCol] = '.';

                    if (beeCol + 1 < matrix.GetLength(1))
                    {
                        beeCol++;
                        if (matrix[beeRow, beeCol] == 'f')
                        {
                            flowersCount++;
                        }
                        if (matrix[beeRow, beeCol] == 'O')
                        {
                            matrix[beeRow, beeCol] = '.';

                            if (beeCol + 1 < matrix.GetLength(1))
                            {
                                beeCol++;
                                if (matrix[beeRow, beeCol] == 'f')
                                {
                                    flowersCount++;
                                }
                            }
                            else
                            {
                                isLost = true;
                                break;
                            }
                        }
                        matrix[beeRow, beeCol] = 'B';
                    }
                    else
                    {
                        isLost = true;
                        break;
                    }
                }
            }

            if (isLost)
            {
                Console.WriteLine("The bee got lost!");
            }

            if (flowersCount < 5)
            {
                Console.WriteLine($"The bee couldn't pollinate the flowers, she needed {5 - flowersCount} flowers more");
            }
            else
            {
                Console.WriteLine($"Great job, the bee managed to pollinate {flowersCount} flowers!");
            }

            for (int row = 0; row < matrix.GetLength(0); row++)
            {
                for (int col = 0; col < matrix.GetLength(1); col++)
                {
                    Console.Write(matrix[row, col]);
                }
                Console.WriteLine();
            }
        }
    }
}